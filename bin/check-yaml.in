#!/bin/bash
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

version=@version@

LIBDIR='@libdir@'
DATADIR='@datadir@'
SYSCONFDIR='@sysconfdir@'

[[ -r ${LIBDIR}/util-msg.sh ]] && source ${LIBDIR}/util-msg.sh

import ${LIBDIR}/util.sh
import ${LIBDIR}/util-iso-yaml.sh

show_profile(){
	prepare_check "$1"
	msg2 "yaml_dir: %s" "${yaml_dir}"
	msg2 "yaml file: %s" "${yaml##*/}"
	msg2 "nonfree_mhwd: %s" "${nonfree_mhwd}"

	[[ ${target_arch} == 'x86_64' ]] && msg2 "multilib: %s" "${multilib}"

	${netinstall} && msg2 "netgroups: %s" "$(get_yaml)"

	reset_profile
}

display_settings(){
	show_version
	show_config

	msg "PROFILE:"
	msg2 "list_dir_iso: %s" "${list_dir_iso}"
	msg2 "build_lists: %s" "$(show_build_lists ${list_dir_iso})"
	msg2 "build_list_iso: %s" "${build_list_iso}"
	msg2 "is_build_list: %s" "${is_build_list}"
	msg2 "build_mirror: %s" "${build_mirror}/${target_branch}"
	${verbose} && msg2 "run_dir: %s" "${run_dir}"

	msg "OPTIONS:"
	msg2 "arch: %s" "${target_arch}"
	msg2 "initsys: %s" "${initsys}"
	msg2 "kernel: %s" "${kernel}"

	msg "ARGS:"
	msg2 "calamares: %s" "${calamares}"

	msg "CHECK QUEUE:"
	run show_profile "${build_list_iso}"
}

load_user_info

load_config "${USERCONFDIR}/manjaro-tools.conf" || load_config "${SYSCONFDIR}/manjaro-tools.conf"

# to force old way to have buildiso run in iso-profiles dir
# run_dir=$(pwd)

load_run_dir "${profile_repo}"

calamares=false
pretend=false
cache_dir_netinstall="${cache_dir}/netinstall"

usage() {
	echo "Usage: ${0##*/} [options]"
	echo "    -p <profile>       Buildset or profile [default: ${build_list_iso}]"
	echo "    -a <arch>          Arch [default: ${target_arch}]"
	echo "    -k <name>          Kernel to use[default: ${kernel}]"
	echo "    -i <name>          Init system to use [default: ${initsys}]"
	echo '    -c                 Check also calamares yaml files generated for the profile'
	echo '    -q                 Query settings'
	echo '    -h                 This help'
	echo ''
	echo ''
	exit $1
}

orig_argv=("$@")

opts='p:a:i:k:cqh'

while getopts "${opts}" arg; do
	case "${arg}" in
		p) build_list_iso="$OPTARG" ;;
		a) target_arch="$OPTARG" ;;
		i) initsys="$OPTARG" ;;
		k) kernel="$OPTARG" ;;
		c) calamares=true ;;
		q) pretend=true ;;
		h|?) usage 0 ;;
		*) echo "invalid argument '${arg}'"; usage 1 ;;
	esac
done

shift $(($OPTIND - 1))

check_root "$0" "${orig_argv[@]}"

prepare_dir "${tmp_dir}"

eval_build_list "${list_dir_iso}" "${build_list_iso}"

${pretend} && display_settings && exit 1

run make_profile_yaml "${build_list_iso}"
