#!/bin/bash
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

version=@version@

BINDIR='@bindir@'
LIBDIR='@libdir@'
PKGDATADIR='@pkgdatadir@'
SYSCONFDIR='@sysconfdir@'

[[ -r ${LIBDIR}/util-msg.sh ]] && source ${LIBDIR}/util-msg.sh
[[ -r ${LIBDIR}/util.sh ]] && source ${LIBDIR}/util.sh
[[ -r ${LIBDIR}/util-iso.sh ]] && source ${LIBDIR}/util-iso.sh

display_settings(){
    msg "manjaro-tools"
    msg2 "version: ${version}"
    
    if [[ -f ${USER_CONFIG}/manjaro-tools.conf ]]; then
	msg2 "user_config: ${USER_CONFIG}/manjaro-tools.conf"
    else
	msg2 "manjaro_tools_conf: ${manjaro_tools_conf}"
    fi
    
    msg "PROFILE:"
    msg2 "buildsets: $(load_sets ${sets_dir_iso})"
    msg2 "buildset_iso: ${buildset_iso}"
    msg2 "is_buildset: ${is_buildset}"
    msg2 "initsys: ${initsys}"
    msg2 "displaymanager: ${displaymanager}"
    
    msg "OPTIONS:"
    msg2 "arch: ${arch}"
    msg2 "branch: ${branch}"
    msg2 "chroots_iso: ${chroots_iso}"
    
    msg "ARGS:"
    msg2 "clean_first: ${clean_first}"
    msg2 "auto_svc_conf: ${auto_svc_conf}"
    msg2 "custom_pac_conf: ${custom_pac_conf}"
    if ${is_buildset}; then
	msg2 "clean_cache_xorg: ${clean_cache_xorg}"
	msg2 "clean_cache_lng: ${clean_cache_lng}"
	msg2 "images_only: ${images_only}"
	msg2 "iso_only: ${iso_only}"
    fi
#     msg2 "high_compression: ${high_compression}"

    msg "PATHS:" 
    msg2 "work_dir: ${work_dir}"
    msg2 "iso_dir: ${iso_dir}"
    if ${is_buildset}; then
	msg2 "cache_dir_xorg: ${cache_dir_xorg}"
	msg2 "cache_dir_lng: ${cache_dir_lng}"
    fi
#     msg2 "pacman_conf: ${pacman_conf}"
#     msg2 "pacman_mirrors: ${mirrors_conf}"
    
    msg "IMAGES SETTINGS:"
    msg2 "manjaro_kernel: ${manjaro_kernel}"
    msg2 "manjaro_version: ${manjaro_version}"
    
    msg2 "plymouth_theme: ${plymouth_theme}"
    
    if ${auto_svc_conf};then
	if [ ${initsys} == "systemd" ];then
	    msg2 "start_systemd: ${start_systemd[*]}"
	else
	    msg2 "start_openrc: ${start_openrc[*]}"
	fi
    fi
    
    msg "ISO SETTINGS:"
    msg2 "iso_label: ${iso_label}"
    msg2 "iso_version: ${iso_version}"
    msg2 "manjaroiso: ${manjaroiso}"
    msg2 "code_name: ${code_name}"
    msg2 "img_name: ${img_name}"
    msg2 "install_dir: ${install_dir}"
    msg2 "iso_file: ${iso_file}"
    msg2 "compression: ${compression}"
    
    msg "LIVECD:"
    msg2 "username: ${username}"
    msg2 "password: ${password}"
    msg2 "addgroups: ${addgroups}"
    msg2 "hostname: ${hostname}"
    
    if ${auto_svc_conf};then
	if [ ${initsys} == "systemd" ];then
	    msg2 "start_systemd_live: ${start_systemd_live[*]}"
	else
	    msg2 "start_openrc_live: ${start_openrc_live[*]}"
	fi
    fi
}

build_iso(){
    if ${is_buildset};then
	msg "Start building [${buildset_iso}]"
	for prof in $(cat ${sets_dir_iso}/${buildset_iso}.set); do
	    cd $prof
		
		work_dir=${chroots_iso}/${prof}/${arch}
		displaymanager=$(cat ${prof}/displaymanager)
		initsys=$(cat ${prof}/initsys)
		iso_file="${iso_dir}/${img_name}-${desktop}-${iso_version}-${arch}.iso"
		
		if [[ -f ${prof}/pacman-${pacman_conf_arch}.conf ]]; then
		    pacman_conf="${prof}/pacman-${pacman_conf_arch}.conf"
		else
		    pacman_conf="${PKGDATADIR}/pacman-${pacman_conf_arch}.conf"
		fi
		
		${clean_first} && clean_up
		
		${clean_cache_xorg} && clean_cache "${cache_dir_xorg}"
		${clean_cache_lng} && clean_cache "${cache_dir_lng}"
		
		if ${iso_only}; then
		    [[ ! -d ${work_dir} ]] && die "You need to create images first eg. buildiso -B"
		    compress_images 
		    break
		fi
		
		if ${images_only}; then
		    build_images
		    warning "Continue with eg. buildiso -Gv ..."
		    break
		else
		    build_images
		    compress_images
		fi
	    cd ..
	done
	msg "Finished building [${buildset_iso}]"
    else
	cd ${buildset_iso}
	    
	    work_dir=${chroots_iso}/${buildset_iso}/${arch}
	    displaymanager=$(cat ${buildset_iso}/displaymanager)
	    initsys=$(cat ${buildset_iso}/initsys)
	    iso_file="${iso_dir}/${img_name}-${desktop}-${iso_version}-${arch}.iso"
	    
	    if [[ -f ${buildset_iso}/pacman-${pacman_conf_arch}.conf ]]; then
		pacman_conf="${buildset_iso}/pacman-${pacman_conf_arch}.conf"
	    else
		pacman_conf="${PKGDATADIR}/pacman-${pacman_conf_arch}.conf"
	    fi
	    
	    ${clean_first} && clean_up
	    
	    ${clean_cache_xorg} && clean_cache "${cache_dir_xorg}"
	    ${clean_cache_lng} && clean_cache "${cache_dir_lng}"
	    
	    if ${iso_only}; then
		[[ ! -d ${work_dir} ]] && die "You need to create images first eg. buildiso -B"
		compress_images 
		exit 1
	    fi
	    
	    if ${images_only}; then
		build_images
		warning "Continue with eg. buildiso -Gv ..."
		exit 1
	    else
		build_images
		compress_images
	    fi
	cd ..
    fi
}

load_user_info

load_config "${USER_CONFIG}/manjaro-tools.conf"  
load_config "${SYSCONFDIR}/manjaro-tools.conf"

load_desktop_definition

clean_first=true
auto_svc_conf=true
# high_compression=true
clean_cache_xorg=true
clean_cache_lng=true

pretend=false
verbose=false
images_only=false
iso_only=false
# custom_pac_conf=false

pacman_conf_arch='default'

usage() {
    echo "Usage: ${0##*/} [options]"
    echo "    -p <iso>           Set or iso [default: ${buildset_iso}]"
    echo "    -a <arch>          Arch [default: ${arch}]"
    echo "    -b <branch>        Branch [default: ${branch}]"
    echo '    -r <dir>           Chroots directory'
    echo "                       [default: ${chroots_iso}]"
    echo '    -v                 Verbose iso compression'
    echo '    -q                 Query settings and pretend build'
    echo '    -c                 Disable clean work dir and target dir iso'
#     echo '    -z                 Disable high compression'
    echo '    -A                 Disable auto configure services'
    echo '    -B                 Build images only'
    echo '    -G                 Generate iso only'
    echo '                       Requires pre built images'
    echo '    -P                 Disable clean pkgs cache'
    echo '    -L                 Disable clean lng cache'
#     echo "    -C                 Use custom pacman.conf in iso profile"
    echo '    -h                 This help'
    echo ''
    echo ''
    exit 1
}

orig_argv=("$@")

opts='p:a:b:r:cvqAXLBGh'

while getopts "${opts}" arg; do
    case "${arg}" in
	p) buildset_iso="$OPTARG" ;;
	a) arch="$OPTARG" ;;
	b) branch="$OPTARG" ;;
	r) chroots_iso="$OPTARG" ;;
	v) verbose=true; iso_args+=(-v) ;;
	q) pretend=true ;;
	c) clean_first=false ;;
# 	z) high_compression=false ;;
	A) auto_svc_conf=false ;;
# 	C) custom_pac_conf=true ;;
	X) clean_cache_xorg=false ;;
	L) clean_cache_lng=false ;;
	B) images_only=true ;;
	G) iso_only=true ;;
	h) usage ;;
    esac
done

shift $(($OPTIND - 1))

if [[ "$arch" == 'x86_64' ]]; then
    pacman_conf_arch='multilib'
fi

sets_dir_iso="${sets_dir}/iso"
cache_dir_lng="${cache_dir}/lng"
cache_dir_xorg="${cache_dir}/xorg"
iso_dir="${cache_dir}/iso"

# if ${custom_pac_conf};then
#     pacman_conf="${PWD}/pacman-${pacman_conf_arch}.conf"
# else
#     pacman_conf="${PKGDATADIR}/pacman-${pacman_conf_arch}.conf"
# fi
# if [[ -f pacman-${pacman_conf_arch}.conf ]]; then
#     pacman_conf="${PWD}/pacman-${pacman_conf_arch}.conf"
# else
#     pacman_conf="${PKGDATADIR}/pacman-${pacman_conf_arch}.conf"
# fi
mirrors_conf="${PKGDATADIR}/pacman-mirrors-${branch}.conf"

create_args+=(-f -x -v -a ${arch} -D ${install_dir} -C ${pacman_conf} -M ${mirrors_conf})

iso_args+=(-a ${arch} -D ${install_dir} -L ${iso_label} -c ${compression})

#buildset_iso=${PWD##*/}

# ${high_compression} && iso_args+=(-x)
# ${clean_first} && iso_args+=(-f)

check_root "$0" "${orig_argv[@]}"

eval_buildset "${buildset_iso}" "${sets_dir_iso}"

prepare_cachedirs

${pretend} && display_settings && exit 1

build_iso
